version: "3.9"
services:
  # Plex: Media streaming server for organizing and delivering media content.
  plex:
    image: linuxserver/plex
    container_name: plex
    hostname: plex
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /volume1/docker/plex/config:/config
      - /volume1/docker/plex/transcode:/transcode
      - /volume2/media:/media

    ports:
      - "32400:32400"
    networks:
      - media_net
    restart: unless-stopped

  # NZBGet: Usenet downloader for automated media file acquisition.
  nzbget:
    image: linuxserver/nzbget
    container_name: nzbget
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /volume1/docker/nzbget/config:/config
      - /volume1/docker/nzbget/downloads:/downloads
    ports:
      - "6789:6789"
    networks:
      - media_net
    restart: unless-stopped

  # Gluetun: VPN container providing secure network routing for dependent services.
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER}
      - VPN_TYPE=${VPN_TYPE}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
      - TZ=${TZ}
      - BLOCK_IPV6=${BLOCK_IPV6}
      - SERVER_CITIES=${SERVER_CITIES}
      - DOT_PROVIDERS=${DOT_PROVIDERS}
      - MTU=${MTU}
      
    volumes:
      - /volume1/docker/gluetun:/gluetun
    ports:
      - 8112:8112
    networks:
      - media_net
    restart: unless-stopped

  # Radarr: Automated movie downloader and organizer.
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    hostname: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /volume1/docker/radarr/config:/config
      - /volume1/docker/nzbget/downloads:/downloads
      - /volume2/media/movies:/movies
      - /volume2/media/prometheus-media/movies:/prometheus-media/movies
    ports:
      - "7878:7878"
    networks:
      - media_net
    restart: unless-stopped

  # Sonarr: Automated TV series downloader and organizer.
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    hostname: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /volume1/docker/sonarr/config:/config
      - /volume1/docker/nzbget/downloads:/downloads
      - /volume2/media/tv:/tv
      - /volume2/media/prometheus-media/tv:/prometheus-media/tv
    ports:
      - "8989:8989"
    networks:
      - media_net
    restart: unless-stopped

  speakarr:
    image: hotio/readarr:nightly
    container_name: speakarr
    hostname: speakarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /volume1/docker/speakarr/config:/config
      - /volume1/docker/nzbget/downloads:/downloads
      - /volume1/docker/calibre/scripts:/scripts
      - /volume2/media/audiobooks:/audiobooks
      - /volume2/media/audiobooks-dump:/audiobooks-dump
    ports:
      - "8788:8787"
    networks:
      - media_net
    restart: unless-stopped

  # Prowlarr: Indexer manager integrating with media downloaders.
  prowlarr:
    image: lscr.io/linuxserver/prowlarr
    container_name: prowlarr
    hostname: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /volume1/docker/prowlarr/config:/config
    ports:
      - "9696:9696"
    networks:
      - media_net
    restart: unless-stopped

  # Tautulli: Monitoring and analytics for Plex server usage.
  tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    hostname: tautulli
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /volume1/docker/tautulli/config:/config
      - /volume1/docker/plex/config/Library/Application Support/Plex Media Server/Logs:/logs:ro
    ports:
      - "8181:8181"
    networks:
      - media_net
    restart: unless-stopped

  # Overseerr: Request management interface for media content.
  overseerr:
    image: sctx/overseerr
    container_name: overseerr
    hostname: overseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    ports:
      - "5055:5055"
    volumes:
      - /volume1/docker/overseerr/config:/app/config
    networks:
      - media_net
    restart: unless-stopped

  # Watchtower: Automated container update manager.
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    environment:
      - TZ=${TZ}
    command: --cleanup --interval 300
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - media_net
    restart: unless-stopped

  tdarr:
    image: ghcr.io/haveagitgat/tdarr:latest
    container_name: tdarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /volume1/docker/tdarr/server:/app/server
      - /volume1/docker/tdarr/configs:/app/configs
      - /volume1/docker/tdarr/logs:/app/logs
      - /volume2/media:/media
    ports:
      - "8265:8265"
      - "8266:8266"
    networks:
      - media_net
    restart: unless-stopped

  tdarr_node:
    image: ghcr.io/haveagitgat/tdarr_node:latest
    container_name: tdarr_node
    depends_on:
      - tdarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - TDARR_SERVER=tdarr
    volumes:
      - /volume1/docker/tdarr/configs:/app/configs
      - /volume1/docker/tdarr/logs:/app/logs
      - /volume2/media:/media
    networks:
      - media_net
    restart: unless-stopped

networks:
  media_net:
    external: true