version: "3.9"
services:
  plex:
    image: linuxserver/plex
    container_name: plex
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM}
    volumes:
      - /volume1/docker/plex/config:/config
      - /volume1/docker/plex/transcode:/transcode
      - /volume2/plex-media:/media:ro
    ports:
      - "32400:32400"
    networks:
      - tds_net
    restart: unless-stopped

  nzbget:
    image: linuxserver/nzbget
    container_name: nzbget
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /volume1/docker/nzbget/config:/config
      - /volume1/docker/nzbget/downloads:/downloads
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /volume1/docker/radarr/config:/config
      - /volume1/docker/nzbget/downloads:/downloads
      - /volume2/plex-media/plex-movies:/movies
    ports:
      - "7878:7878"
    networks:
      - tds_net
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /volume1/docker/sonarr/config:/config
      - /volume1/docker/nzbget/downloads:/downloads
      - /volume2/plex-media/plex-tv:/tv
    ports:
      - "8989:8989"
    networks:
      - tds_net
    restart: unless-stopped

  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /volume1/docker/readarr/config:/config
      - /volume1/docker/nzbget/downloads:/downloads
      - /volume2/plex-media/readarr:/books
    ports:
      - "8787:8787"
    networks:
      - tds_net
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /volume1/docker/prowlarr/config:/config
    ports:
      - "9696:9696"
    networks:
      - tds_net
    restart: unless-stopped

  tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /volume1/docker/tautulli/config:/config
      - /volume1/docker/plex/config/Library/Application Support/Plex Media Server/Logs:/logs:ro
    ports:
      - "8181:8181"
    networks:
      - tds_net
    restart: unless-stopped

  overseerr:
    image: sctx/overseerr
    container_name: overseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    ports:
      - "5055:5055"
    volumes:
      - /volume1/docker/overseerr/config:/app/config
    networks:
      - tds_net
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    environment:
      - TZ=${TZ}
    command: --cleanup --interval 300
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - tds_net
    restart: unless-stopped

  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    environment:
      - VPN_SERVICE_PROVIDER=mullvad
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
      - TZ=${TZ}
    volumes:
      - /volume1/docker/gluetun:/gluetun
    ports:
      - 8112:8112 # Optional if using web interface of routed container (e.g., Deluge)
    networks:
      - tds_net
    restart: unless-stopped

networks:
  tds_net:
    external: true